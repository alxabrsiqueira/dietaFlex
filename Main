//metodos para utilizar na MainActivity

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;

import android.content.Context;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import com.example.agoravai.dao.BancoImport;
import com.example.agoravai.dataBase.DadosRefeicao;
import com.example.agoravai.dbImport.Nutrientes;
import com.google.android.material.snackbar.Snackbar;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    private ConstraintLayout layoutContentMain;

    private SQLiteDatabase conexao;

    private DadosRefeicao dadosRefeicao;
    private BancoImport mBancoImport;

    private ListView lvAlimento;
    private List<Nutrientes> listNutrientes = new ArrayList<Nutrientes>();
    private ArrayAdapter<Nutrientes> arrayAdapterAlimento;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        

        inicializarBancoDados();


        layoutContentMain = (ConstraintLayout)findViewById(R.id.layoutContentMain);

        criarConexao();
    }





    private void inicializarBancoDados(){

        mBancoImport = new BancoImport(this);

        File database = getApplicationContext().getDatabasePath(BancoImport.NOMEDB);
        if ( database.exists() == false ){

            mBancoImport.getReadableDatabase();
            if ( copiaBanco(this) ){
                alert("Banco copiado com sucesso");
            }
            else{
                alert("Erro ao copiar o banco de dados");
            }
        }

    }

    private void alert(String s){
        Toast.makeText(this,s,Toast.LENGTH_LONG).show();
    }


    private  boolean copiaBanco(Context context){
        try{
            InputStream inputStream = context.getAssets().open(BancoImport.NOMEDB);
            String outFile = BancoImport.LOCALDB + BancoImport.NOMEDB;
            OutputStream outputStream = new FileOutputStream(outFile);
            byte[] buff = new byte[1024];
            int lenght = 0;
            while ( (lenght = inputStream.read(buff)) > 0 ){
                outputStream.write(buff,0,lenght);
            }
            outputStream.flush();
            outputStream.close();
            return true;

        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return false;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }


    }




    //FAZ A CONEXAO COM O BANCO
     private void criarConexao(){

        try{

            dadosRefeicao = new DadosRefeicao(this);

            conexao = dadosRefeicao.getWritableDatabase();

            Snackbar.make(layoutContentMain, "Conex√£o criada com sucesso!", Snackbar.LENGTH_SHORT)
                    .setAction("OK",null).show();

        }
        catch (SQLException ex){

            AlertDialog.Builder dlg = new AlertDialog.Builder(this);
            dlg.setTitle("Erro");
            dlg.setMessage(ex.getMessage());
            dlg.setNeutralButton("OK", null);
            dlg.show();

        }


     }


}
